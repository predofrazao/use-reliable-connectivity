{"version":3,"file":"index.js","sources":["../src/hooks/useReliableConnectivity.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport type BackgroundHandlerFn = (isOnBackground: boolean) => void;\n\nexport type ConnectionConfig = {\n  /**\n   * The initial state to be used while the first check is being performed.\n   * @default true\n   */\n  initialConnectionState?: boolean;\n\n  /**\n   * Timeout in milliseconds for the connection reachability check.\n   * @default 3000\n   */\n  timeout?: number;\n\n  /**\n   * URL to check for connection reachability.\n   * @default \"https://clients3.google.com/generate_204\"\n   */\n  reachabilityUrl?: string;\n\n  /**\n   * Expected response status codes from the connection reachability URL.\n   * @default [204]\n   */\n  expectedResponseStatus?: number[];\n\n  /**\n   * Connection reachability check interval in milliseconds.\n   * @default 1000\n   */\n  interval?: number;\n\n  /**\n   * Connection reachability check interval in milliseconds when application is on background. It will be used only if `backgroundSetup` is defined.\n   * @default 10000\n   */\n  backgroundInterval?: number;\n\n  /**\n   * Used to configure the handler for background state.\n   * @example\n   * const isConnected = useReliableConnectivity({\n   *  backgroundSetup: (backgroundHandler) => {\n   *    function visibilityChangeHandler() {\n   *      backgroundHandler(document.visibilityState === \"hidden\");\n   *    }\n   *\n   *    window.addEventListener(\"visibilitychange\", visibilityChangeHandler, false);\n   *\n   *    return () => {\n   *      window.removeEventListener(\"visibilitychange\", visibilityChangeHandler);\n   *    }\n   *  }),\n   * });\n   * @default undefined\n   */\n  backgroundSetup?: (backgroundHandler: BackgroundHandlerFn) => (() => void) | void;\n};\n\nexport const useReliableConnectivity = ({\n  initialConnectionState = true,\n  timeout = 3000,\n  reachabilityUrl = \"https://clients3.google.com/generate_204\",\n  expectedResponseStatus = [204],\n  interval = 1000,\n  backgroundInterval = 10000,\n  backgroundSetup,\n}: ConnectionConfig) => {\n  // Refs\n  const reachabilityIntervalRef = useRef<number | null>(null);\n\n  // States\n  const [isConnected, setIsConnected] = useState(initialConnectionState);\n\n  // Callbacks\n  /**\n   * Fetches the reachability URL and checks if the response status is in the expected response status.\n   * @returns {Promise<boolean>} - Returns `true` if the response status is in the `expectedResponseStatus`, `false` otherwise.\n   */\n  const fetchReachabilityUrl = useCallback(async () => {\n    const abortController = new AbortController();\n    const abort = setTimeout(() => abortController.abort(\"Reachability timed out.\"), timeout);\n\n    try {\n      const response = await fetch(reachabilityUrl, {\n        signal: abortController.signal,\n        cache: \"no-store\",\n      });\n\n      if (!expectedResponseStatus.includes(response.status)) {\n        throw new Error(`Reachability returned status ${response.status}, that is not expected.`);\n      }\n\n      return true;\n    } catch (e) {\n      if (e instanceof Error) {\n        console.error(e.message);\n      }\n\n      return false;\n    } finally {\n      clearTimeout(abort);\n    }\n  }, [reachabilityUrl, timeout, expectedResponseStatus]);\n\n  /**\n   * Sets the reachability interval.\n   */\n  const setReachabilityInterval = useCallback(\n    (interval: number) => {\n      reachabilityIntervalRef.current = setInterval(\n        async () => setIsConnected(await fetchReachabilityUrl()),\n        interval\n      );\n    },\n    [fetchReachabilityUrl]\n  );\n\n  /**\n   * Clears the reachability interval.\n   */\n  const clearReachabilityInterval = useCallback(() => {\n    if (reachabilityIntervalRef.current) {\n      clearInterval(reachabilityIntervalRef.current);\n      reachabilityIntervalRef.current = null;\n    }\n  }, []);\n\n  /**\n   * Background handler to set the reachability interval based on the app state. Used as callback of `backgroundSetup`.\n   */\n  const _backgroundHandler: BackgroundHandlerFn = useCallback(\n    (isOnBackground) => {\n      clearReachabilityInterval();\n      setReachabilityInterval(isOnBackground ? backgroundInterval : interval);\n    },\n    [clearReachabilityInterval, setReachabilityInterval, backgroundInterval, interval]\n  );\n\n  // Effects\n  useEffect(() => {\n    const unsubscribe = backgroundSetup?.(_backgroundHandler);\n    return () => unsubscribe && unsubscribe();\n  }, [backgroundSetup, _backgroundHandler]);\n\n  useEffect(() => {\n    setReachabilityInterval(interval);\n    return clearReachabilityInterval;\n  }, [setReachabilityInterval, interval, clearReachabilityInterval]);\n\n  return isConnected;\n};\n"],"names":[],"mappings":";;AA8DO,MAAM,uBAAuB,GAAG,CAAC,EACtC,sBAAsB,GAAG,IAAI,EAC7B,OAAO,GAAG,IAAI,EACd,eAAe,GAAG,0CAA0C,EAC5D,sBAAsB,GAAG,CAAC,GAAG,CAAC,EAC9B,QAAQ,GAAG,IAAI,EACf,kBAAkB,GAAG,KAAK,EAC1B,eAAe,GACE,KAAI;;AAErB,IAAA,MAAM,uBAAuB,GAAG,MAAM,CAAgB,IAAI,CAAC;;IAG3D,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,sBAAsB,CAAC;;AAGtE;;;AAGG;AACH,IAAA,MAAM,oBAAoB,GAAG,WAAW,CAAC,YAAW;AAClD,QAAA,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE;AAC7C,QAAA,MAAM,KAAK,GAAG,UAAU,CAAC,MAAM,eAAe,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,OAAO,CAAC;AAEzF,QAAA,IAAI;AACF,YAAA,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,eAAe,EAAE;gBAC5C,MAAM,EAAE,eAAe,CAAC,MAAM;AAC9B,gBAAA,KAAK,EAAE,UAAU;AAClB,aAAA,CAAC;YAEF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACrD,MAAM,IAAI,KAAK,CAAC,CAAA,6BAAA,EAAgC,QAAQ,CAAC,MAAM,CAAyB,uBAAA,CAAA,CAAC;;AAG3F,YAAA,OAAO,IAAI;;QACX,OAAO,CAAC,EAAE;AACV,YAAA,IAAI,CAAC,YAAY,KAAK,EAAE;AACtB,gBAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC;;AAG1B,YAAA,OAAO,KAAK;;gBACJ;YACR,YAAY,CAAC,KAAK,CAAC;;KAEtB,EAAE,CAAC,eAAe,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC;AAEtD;;AAEG;AACH,IAAA,MAAM,uBAAuB,GAAG,WAAW,CACzC,CAAC,QAAgB,KAAI;AACnB,QAAA,uBAAuB,CAAC,OAAO,GAAG,WAAW,CAC3C,YAAY,cAAc,CAAC,MAAM,oBAAoB,EAAE,CAAC,EACxD,QAAQ,CACT;AACH,KAAC,EACD,CAAC,oBAAoB,CAAC,CACvB;AAED;;AAEG;AACH,IAAA,MAAM,yBAAyB,GAAG,WAAW,CAAC,MAAK;AACjD,QAAA,IAAI,uBAAuB,CAAC,OAAO,EAAE;AACnC,YAAA,aAAa,CAAC,uBAAuB,CAAC,OAAO,CAAC;AAC9C,YAAA,uBAAuB,CAAC,OAAO,GAAG,IAAI;;KAEzC,EAAE,EAAE,CAAC;AAEN;;AAEG;AACH,IAAA,MAAM,kBAAkB,GAAwB,WAAW,CACzD,CAAC,cAAc,KAAI;AACjB,QAAA,yBAAyB,EAAE;QAC3B,uBAAuB,CAAC,cAAc,GAAG,kBAAkB,GAAG,QAAQ,CAAC;KACxE,EACD,CAAC,yBAAyB,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,QAAQ,CAAC,CACnF;;IAGD,SAAS,CAAC,MAAK;AACb,QAAA,MAAM,WAAW,GAAG,eAAe,GAAG,kBAAkB,CAAC;AACzD,QAAA,OAAO,MAAM,WAAW,IAAI,WAAW,EAAE;AAC3C,KAAC,EAAE,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;IAEzC,SAAS,CAAC,MAAK;QACb,uBAAuB,CAAC,QAAQ,CAAC;AACjC,QAAA,OAAO,yBAAyB;KACjC,EAAE,CAAC,uBAAuB,EAAE,QAAQ,EAAE,yBAAyB,CAAC,CAAC;AAElE,IAAA,OAAO,WAAW;AACpB;;;;"}